// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package Route

import (
	"gorm.io/gorm"
	"muhammadiyah/Controller"
	"muhammadiyah/Repository"
	"muhammadiyah/Services"
)

// Injectors from wire.go:

func PWMDI(db *gorm.DB) *Controller.PWMControllerImpl {
	pwmRepositoryImpl := Repository.PWMRepositoryControllerProvider(db)
	pwmServiceImpl := Services.PWMServiceControllerProvider(pwmRepositoryImpl)
	pwmControllerImpl := Controller.PWMControllerControllerProvider(pwmServiceImpl)
	return pwmControllerImpl
}

func DepartmentDI(db *gorm.DB) *Controller.DepartmentControllerImpl {
	departmentRepositoryImpl := Repository.DepartmentRepositoryControllerProvider(db)
	departmentServiceImpl := Services.DepartmentServiceControllerProvider(departmentRepositoryImpl)
	departmentControllerImpl := Controller.DepartmentControllerControllerProvider(departmentServiceImpl)
	return departmentControllerImpl
}

func PengurusDI(db *gorm.DB) *Controller.PengurusControllerImpl {
	pengurusRepositoryImpl := Repository.PengurusRepositoryControllerProvider(db)
	pengurusServiceImpl := Services.PengurusServiceControllerProvider(pengurusRepositoryImpl)
	pengurusControllerImpl := Controller.PengurusControllerControllerProvider(pengurusServiceImpl)
	return pengurusControllerImpl
}

func AuthDI(db *gorm.DB) *Controller.AuthControllerImpl {
	authRepositoryImpl := Repository.AuthRepositoryControllerProvider(db)
	pengurusRepositoryImpl := Repository.PengurusRepositoryControllerProvider(db)
	pwmRepositoryImpl := Repository.PWMRepositoryControllerProvider(db)
	authServiceImpl := Services.AuthServiceControllerProvider(authRepositoryImpl, pengurusRepositoryImpl, pwmRepositoryImpl)
	authControllerImpl := Controller.AuthControllerControllerProvider(authServiceImpl)
	return authControllerImpl
}
